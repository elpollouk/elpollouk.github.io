// ChickenFW
// Version: 1.0.0
// Commit: 306fa1e8a30df5ee0b5818460d87cc9d74a188aa

(function(){"use strict";var mixIntoObj=function mixIntoObj(dst,src){for(var key in src){if(src.hasOwnProperty(key)){dst[key]=src[key]}}};window.Chicken=window.Chicken||{};window.Chicken.mix=function mix(){var target=arguments[0];for(var i=1;i<arguments.length;i++){var component=arguments[i];mixIntoObj(target,component)}},window.Chicken.combine=function combine(){var obj={};for(var i=0;i<arguments.length;i++){mixIntoObj(obj,arguments[i])}return obj}})();(function(){"use strict";var namespace=function namespace(path,content,parent){var name;var names=path.split(".");parent=parent||window;while(names.length>1){name=names.shift();parent=parent[name]=parent[name]||{}}if(typeof content==="object"){name=names[0];parent=parent[name]=parent[name]||{};Chicken.mix(parent,content)}else{parent[names[0]]=content}};namespace("Chicken.namespace",namespace)})();(function(){"use strict";var Class=function Class(constructor,memberFuncs,properties,statics){memberFuncs&&Chicken.mix(constructor.prototype,memberFuncs);properties&&Object.defineProperties(constructor.prototype,properties);statics&&Chicken.mix(constructor,statics);return constructor};var registerClass=function registerClass(namespacePath,constructor,memberFuncs,properties,statics){var c=Chicken.Class(constructor,memberFuncs,properties,statics);Chicken.namespace(namespacePath,c);return c};Chicken.namespace("Chicken",{Class:Class,registerClass:registerClass})})();(function(){"use strict";function StoredItem(name,dependencies,initor,value){this.name=name;this.dependencies=dependencies;this.initor=initor;this.value=value}var _objectStore={};function _validateDependenciesVsInitor(name,dependencies,initor){if(typeof name!=="string")throw new Error("Invalid name specified. Must be a string but was "+typeof name);if(!Array.isArray(dependencies))throw new Error("Dependencies weren't passed as an array for '"+name+"'");if(typeof initor!=="function")throw new Error("Invalid initor for '"+name+"'");if(initor.length!==dependencies.length)throw new Error("Wrong number of dependencies specified for initor provided for '"+name+"'")}function _registerImmediateValue(name,value){if(typeof name!=="string")throw new Error("Invalid name specified. Must be a string but was "+typeof name);if(name in _objectStore)throw new Error("Item '"+name+"' already registered");_objectStore[name]=new StoredItem(name,[],function(){return value},value)}function _registerInitorValue(name,dependencies,initor){_validateDependenciesVsInitor(name,dependencies,initor);if(name in _objectStore)throw new Error("Item '"+name+"' already registered");_objectStore[name]=new StoredItem(name,dependencies,initor)}function _fetchGlobal(name){var path=name.split(".");var value=window;for(var i=0;i<path.length;i++){var key=path[i];if(key in value===false)return;value=value[key]}return value}function _formatRequiredBy(requiredBy){var msg="";if(requiredBy.length){msg+="\nRequired by:";for(var i=0;i<requiredBy.length;i++){msg+="\n  "+requiredBy[i]}}return msg}var Inject={register:function Chicken_register(){switch(arguments.length){case 2:_registerImmediateValue(arguments[0],arguments[1]);break;case 3:_registerInitorValue(arguments[0],arguments[1],arguments[2]);break;default:throw new Error("Incorrect number of arguments passed to Chicken.register()")}},inject:function Chicken_inject(dependencies,initor){_validateDependenciesVsInitor("Chicken.inject()",dependencies,initor);return this._initItem(dependencies,initor,[],null)},resolveAll:function Chicken_resolveAll(){var requiredBy=[];for(var name in _objectStore){if(_objectStore.hasOwnProperty(name)){var item=_objectStore[name];this._checkAndResolve(item,requiredBy,null)}}},fetch:function Chicken_fetch(name,mocks){return this._fetch(name,[],mocks)},clear:function Chicken_clear(){_objectStore={}},_checkAndResolve:function Chicken__checkAndResolve(item,requiredBy,mocks){var value=item.value;if(typeof value==="undefined"||mocks){requiredBy.unshift(item.name);value=this._initItem(item.dependencies,item.initor,requiredBy,mocks);if(typeof value==="undefined")throw new Error("Initor for '"+name+"' did not return a value.");requiredBy.shift();if(!mocks){item.value=value}}return value},_initItem:function Chicken__initItem(dependencies,initor,requiredBy,mocks){var length=dependencies.length;var injects=new Array(length);for(var i=0;i<length;i++){var dependency=dependencies[i];injects[i]=this._fetch(dependency,requiredBy,mocks)}return initor.apply(initor,injects)},_fetch:function Chicken__fetch(name,requiredBy,mocks){if(requiredBy.indexOf(name)>=0)throw new Error("Circular dependency detected when resolving '"+name+"'."+_formatRequiredBy(requiredBy));if(mocks&&name in mocks){return mocks[name]}var item=_objectStore[name];if(item){return this._checkAndResolve(item,requiredBy,mocks)}var value=_fetchGlobal(name);if(typeof value!=="undefined")return value;throw new Error("Item '"+name+"' has not been registered."+_formatRequiredBy(requiredBy))}};Chicken.namespace("Chicken",Inject)})();Chicken.inject(["Worker"],function(Worker){var workerFuncs={startWorker:function Chicken_startWorker(main,onmessage,onerror){var workerURL=URL.createObjectURL(new Blob(["(",main.toString(),")(this);"],{type:"application/javascript"}));var worker=new Worker(workerURL);worker.onmessage=onmessage||null;worker.onerror=onerror||null;URL.revokeObjectURL(workerURL);return worker}};Chicken.namespace("Chicken",workerFuncs)});